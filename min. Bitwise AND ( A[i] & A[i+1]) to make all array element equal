**problem**
Given an array of size "N". We have to make all the elements in the array equal by performing the below operation.

Replace any two adjancent elements with their Bitwise AND value ( A[i] & A[i+1]). this will decrease the array size by 1.
Find the minimum number of operations to make the array equal.

Constraints:
1 <= N <= 10^6
1 <= A[i] <= 10^10

Sample Input:
5
0 2 3 7 7

Output
4



Solution:-

1. add all nums to get the target

2. greedily add adjacent num from right to left if we have not reached the target.


void solve() {
    lln n;
    cin>>n;
    
    vector<lln>a(n);
    
    for(int i=0;i<n;i++) cin>>a[i];
    
     lln cur=pow(2,31)-1;
     lln ans=0;
     lln target=a[0];
     for(int i=1;i<n;i++) target&=a[i];

     for(int i=0;i<n;i++){
     	cur&=a[i];
     	ans+=(target!=cur);

     	if(cur==target)
     		cur=pow(2,31)-1;
     }
      
     cout<<ans;
    cout<<endl;
    
    

    return;
}

